/* =============================================================================
   Mixins
   ========================================================================== */

@import 'animations';
@import 'responsive';
@import 'typography';

/* ==|== Mixin =================
   General
====================================== */
@mixin circle ($size, $color: inherit ) {
  border-radius: 50%;
  display: inline-block;

  @if $color == inherit {
    // If user wants to inherit the color,
    // take advantage of the fact that border
    // color defaults to the text color of the element.
    border-width: $size / 2;
    border-style: solid;
    height: 0;
    width: 0;
  }
  @else {
    // Otherwise, just use background-color.
    background-color: $color;
    height: $size;
    width: $size;
  }
}

/* =========================================================================
   Layout
========================================================================== */

@mixin absolute-cover {
    bottom:0;
    height:100%;
    left:0;
    position: absolute;
    right:0;
    top:0;
    width:100%;
}

@mixin responsive-img(){
    > div {
        position: relative;
    }
    img {
        @include absolute-cover();
    }
}

@mixin cf() {
    &:before,
    &:after {
        content: " ";
        display: table;
    }
    &:after {
        clear: both;
    }
    *zoom: 1;
}

@mixin color-fill($color) {
    color:$color;
    fill:$color;
}

@mixin border-color-fill($color) {
    border-color:$color;
    color:$color;
    fill:$color;
}

@mixin display-inline-block() {
    display:inline-block;
    *display:inline;
    *zoom:1;
}

@mixin center-block ($max-width: false) {
  margin-left: auto;
  margin-right: auto;
  @if $max-width {
    max-width: $max-width;
  }
}

@mixin list-unstyled {
    list-style-type: none;
    padding-left: 0;
}

@mixin list-inline ($space: false) {
  @include list-unstyled;

  & > li {
    display: inline-block;
  }

  @if $space {
    & > li + li {
      margin-left: $space;
    }
  }
}

@mixin fixed-cover {
    bottom:0;
    height:100%;
    left:0;
    position: fixed;
    right:0;
    top:0;
    width:100%;
}

@mixin mask-image($path) {
    -webkit-mask-image:url($path);
    -moz-mask-image:url($path);
    -ms-mask-image:url($path);
    -o-mask-image:url($path);
    mask-image:url($path);
}

@mixin aspect-ratio($x, $y, $type: "max") {
    $query: '';
    @if $type == 'min' {
        $query: 'min-aspect-ratio';
    } @else {
        $query: 'max-aspect-ratio';
    }
    @media ($query: #{$x}/#{$y}) {
        @content;
    }
}
